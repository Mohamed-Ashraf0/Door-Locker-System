/*
 * UART.h
 *
 *  Created on: Nov 1, 2024
 *      Author: Moham
 */

#ifndef UART_H_
#define UART_H_

#include "std_types.h"
typedef uint32 UART_BaudRateType;
typedef enum {
	UART_DATA_5_BITS=0x00, UART_DATA_6_BITS=0x01, UART_DATA_7_BITS=0x10, UART_DATA_8_BITS=0x11
} UART_BitDataType;

typedef enum {
	UART_NO_PARITY = 0x00, UART_EVEN_PARITY = 0x10, UART_ODD_PARITY = 0x11
} UART_ParityType;

typedef enum {
	UART_ONE_STOP_BIT, UART_TWO_STOP_BITS
} UART_StopBitType;

typedef struct {
UART_BitDataType bit_data;
UART_ParityType parity;
UART_StopBitType stop_bit;
UART_BaudRateType baud_rate;
}UART_ConfigType;
/*******************************************************************************
 *                      Functions Prototypes                                   *
 *******************************************************************************/

/*
 * Description :
 * Functional responsible for Initialize the UART device by:
 * 1. Setup the Frame format like number of data bits, parity bit type and number of stop bits.
 * 2. Enable the UART.
 * 3. Setup the UART baud rate.
 */
void UART_init(const UART_ConfigType *Config_Ptr);

/*
 * Description :
 * Functional responsible for send byte to another UART device.
 */
void UART_sendByte(const uint8 data);

/*
 * Description :
 * Functional responsible for receive byte from another UART device.
 */
uint8 UART_recieveByte(void);

/*
 * Description :
 * Send the required string through UART to the other UART device.
 */
void UART_sendString(const uint8 *Str);

/*
 * Description :
 * Receive the required string until the '#' symbol through UART from the other UART device.
 */
void UART_receiveString(uint8 *Str); // Receive until #

#endif /* UART_H_ */
